plugins {
  id 'org.springframework.boot' version '2.3.5.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'java'
  id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.auspost.location.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'

swaggerSources {
  def typeMappings = 'URI=URI'
  def importMappings = 'URI=java.net.URI'
  location {
    def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
    def configJson = "${rootDir}/src/main/resources/api/config.json"
    inputFile = file(apiYaml)
    def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
    code {
      language = 'spring'
      configFile = file(configJson)
      rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
										typeMappings, '--import-mappings', importMappings] as List<String>
      components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
      outputDir = file("${rootDir}/codegen")
      //dependsOn validation // Should be uncommented once plugin starts supporting OA 3 validation
    }
  }
}

compileJava.dependsOn swaggerSources.location.code
sourceSets.main.java.srcDir "${swaggerSources.location.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.location.code.outputDir}/src/main/resources"



repositories {
  mavenCentral()
}

test {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
}


dependencies {
    // OpenAPI Starts
    swaggerCodegen 'org.openapitools:openapi-generator-cli:5.0.0'
    compileOnly 'io.swagger:swagger-annotations:1.6.2'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    compileOnly 'io.springfox:springfox-oas:3.0.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    // OpenAPI Ends

    // DB Starts
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2'
    // DB Ends

    // Security Starts
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.auth0:java-jwt:3.12.0'
    // Security Ends

    implementation 'org.springframework.boot:spring-boot-starter-web'

    
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

